32a33
> #include <dglib/DgNdxHierCPI.h>
34a36
> class DgZ7StringRF;
37a40
> class DgIDGGSBase;
90c93
< //   Coordinate consisting of a string containing quad number, (aperture 3 hex
---
> //   Coordinate consisting of a string containing quad number, (aperture 7 hex
138c141
< class DgZ7RF : public DgRF<DgZ7Coord, long long int> {
---
> class DgZ7RF : public DgRF<DgZ7Coord, long long int>, public DgNdxHierCPI {
142,144c145,147
<       static DgZ7RF* makeRF (DgRFNetwork& networkIn, const std::string& nameIn,
<                                   int resIn)
<          { return new DgZ7RF (networkIn, nameIn, resIn); }
---
>       static DgZ7RF* makeRF (DgRFNetwork& networkIn, const DgHexIDGGS& hexDggsIn,
>                       const std::string& nameIn, int resIn)
>          { return new DgZ7RF (networkIn, hexDggsIn, nameIn, resIn); }
147c150
<       int aperture (void) const { return 3; }
---
>       int aperture (void) const { return 7; }
177c180,181
<       DgZ7RF (DgRFNetwork& networkIn, const std::string& nameIn, int resIn);
---
>       DgZ7RF (DgRFNetwork& networkIn, const DgHexIDGGS& hexDggsIn,
>                      const std::string& nameIn, int resIn);
179a184,186
>       const DgZ7StringRF* z7strRF_;
>       const DgZ7StringtoZ7Converter* z7strToZ7_;
>       const DgZ7ToZ7StringConverter* z7toZ7str_;
180a188
>    friend class DgZ7StringtoZ7Converter;
